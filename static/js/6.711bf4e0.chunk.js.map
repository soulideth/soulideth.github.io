{"version":3,"sources":["pages/Projects.jsx","images/web-project-1.jpg","images/web-project-2.jpg","images/mobile-project-1.jpg","images/mobile-project-2.jpg","images/ui-project-1.jpg","images/ui-project-2.jpg","API.js","data/projects.js","context/ProjectsContext.jsx","components/projects/ProjectSingle.jsx","components/projects/ProjectsGrid.jsx"],"names":["Projects","className","ApiLink","WebImage2","MobileImage2","UIImage1","UIImage2","MobileImage1","WebImage1","ProjectsContext","createContext","ProjectsProvider","props","useState","projects","setProjects","searchProject","setSearchProject","selectProject","setSelectProject","openBackdrop","setopenBackdrop","a","axios","get","withCredentials","headers","token","localStorage","getItem","response","status","data","searchProjectsByTitle","filter","item","header","toLowerCase","includes","React","useEffect","LoadProject","Provider","value","children","ProjectSingle","docId","title","category","image","motion","div","initial","opacity","animate","delay","transition","ease","duration","to","state","Card","sx","height","maxWidth","CardActionArea","CardMedia","component","alt","CardContent","Stack","alignItems","justify","Typography","gutterBottom","variant","color","ProjectsGrid","useContext","LoadingProduct","show","theme","useTheme","useMediaQuery","breakpoints","down","Array","from","map","index","Grid","elevation","Width","Height","padding","Number","Skeleton","animation","width","container","spacing","justifyContent","xs","onChange","e","target","id","name","type","required","placeholder","project","departments","headerImage"],"mappings":"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","file":"static/js/6.711bf4e0.chunk.js","sourcesContent":["import ProjectsGrid from '../components/projects/ProjectsGrid';\nimport { ProjectsProvider } from '../context/ProjectsContext';\n\nconst Projects = () => {\n\treturn (\n\t\t<ProjectsProvider>\n\t\t\t<div className=\"container mx-auto\">\n\t\t\t\t<ProjectsGrid />\n\t\t\t</div>\n\t\t</ProjectsProvider>\n\t);\n};\n\nexport default Projects;\n","export default __webpack_public_path__ + \"static/media/web-project-1.dbc2198e.jpg\";","export default __webpack_public_path__ + \"static/media/web-project-2.f0108702.jpg\";","export default __webpack_public_path__ + \"static/media/mobile-project-1.0aa0cb76.jpg\";","export default __webpack_public_path__ + \"static/media/mobile-project-2.a5aae786.jpg\";","export default __webpack_public_path__ + \"static/media/ui-project-1.41def4d8.jpg\";","export default __webpack_public_path__ + \"static/media/ui-project-2.d2891914.jpg\";","// const ApiLink = 'http://172.21.3.116:5001';\n// const ApiLink = \"http://localhost:5004\";\nconst ApiLink = \"https://portfolio-soulideth-api.onrender.com\";\nexport default ApiLink;\n","// Import images\nimport WebImage1 from \"../images/web-project-1.jpg\";\nimport WebImage2 from \"../images/web-project-2.jpg\";\nimport MobileImage1 from \"../images/mobile-project-1.jpg\";\nimport MobileImage2 from \"../images/mobile-project-2.jpg\";\nimport UIImage1 from \"../images/ui-project-1.jpg\";\nimport UIImage2 from \"../images/ui-project-2.jpg\";\n\nexport const projectsData = [\n  {\n    id: 1,\n    title: \"Google Health Platform\",\n    category: \"Web Application\",\n    img: WebImage2,\n    ProjectHeader: {\n      title: \"Project Management UI - From Context\",\n      publishDate: \"Jul 26, 2021\",\n      tags: \"UI / Frontend\",\n    },\n  },\n  {\n    id: 2,\n    title: \"Phoenix Digital Agency\",\n    category: \"Mobile Application\",\n    img: MobileImage2,\n  },\n  {\n    id: 3,\n    title: \"Project Management UI\",\n    category: \"UI/UX Design\",\n    img: UIImage1,\n  },\n  {\n    id: 4,\n    title: \"Cloud Storage Platform\",\n    category: \"UI/UX Design\",\n    img: UIImage2,\n  },\n  {\n    id: 5,\n    title: \"React Social App\",\n    category: \"Mobile Application\",\n    img: MobileImage1,\n  },\n  {\n    id: 6,\n    title: \"Apple Design System\",\n    category: \"Web Application\",\n    img: WebImage1,\n  },\n];\n","import React, { useState, createContext } from \"react\";\nimport { projectsData } from \"../data/projects\";\nimport axios from \"axios\";\nimport ApiLink from \"../API\";\n// Create projects context\nexport const ProjectsContext = createContext();\n\n// Create the projects context provider\nexport const ProjectsProvider = (props) => {\n  //   const [projects, setProjects] = useState(projectsData);\n  const [projects, setProjects] = useState([]);\n  const [searchProject, setSearchProject] = useState(\"\");\n  const [selectProject, setSelectProject] = useState(\"\");\n  const [openBackdrop, setopenBackdrop] = useState(false);\n  async function LoadProject() {\n    try {\n      setopenBackdrop(true);\n      const response = await axios.get(\n        ApiLink + \"/api/documenthtml/getlist/all\",\n        {\n          withCredentials: true,\n          headers: {\n            token: localStorage.getItem(\"token\"),\n          },\n        },\n      );\n      if (response.status === 200) {\n        setProjects(response.data.data);\n        setopenBackdrop(false);\n      } else if (response.status === 401) {\n        //got to login and clear token\n      }\n    } catch (error) {}\n  }\n  // Search projects by project title\n  const searchProjectsByTitle = projects.filter((item) => {\n    const result = item.header\n      .toLowerCase()\n      .includes(searchProject.toLowerCase())\n      ? item\n      : searchProject === \"\"\n      ? item\n      : \"\";\n    return result;\n  });\n\n  // Select projects by project category\n  //   const selectProjectsByCategory = projects.filter((item) => {\n  //     let category =\n  //       item.category.charAt(0).toUpperCase() + item.category.slice(1);\n  //     return category.includes(selectProject);\n  //   });\n  React.useEffect(() => {\n    LoadProject();\n  }, []);\n\n  return (\n    <ProjectsContext.Provider\n      value={{\n        projects,\n        setProjects,\n        searchProject,\n        setSearchProject,\n        searchProjectsByTitle,\n        selectProject,\n        setSelectProject,\n        openBackdrop,\n        // selectProjectsByCategory,\n      }}\n    >\n      {props.children}\n    </ProjectsContext.Provider>\n  );\n};\n","import {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectSingle = ({ docId, title, category, image }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, delay: 1 }}\n      transition={{\n        ease: \"easeInOut\",\n        duration: 0.7,\n        delay: 0.15,\n      }}\n    >\n      <Link\n        to={`/projects/single-project/${docId}`}\n        aria-label=\"Single Project\"\n        state={{ docId: docId }}\n      >\n        <Card sx={{ height: 300, maxWidth: 300 }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              sx={{ height: 200 }}\n              image={image}\n              alt=\"Single Project\"\n            />\n            <CardContent>\n              <Stack alignItems=\"center\" justify=\"center\">\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                  {title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {category}\n                </Typography>\n              </Stack>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        {/* <div className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\">\n          <div>\n            <img\n              src={image}\n              className=\"rounded-t-xl border-none\"\n              alt=\"Single Project\"\n            />\n          </div>\n          <div className=\"text-center px-4 py-6\">\n            <p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\n              {title}\n            </p>\n            <span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\n              {category}\n            </span>\n          </div>\n        </div> */}\n      </Link>\n    </motion.div>\n  );\n};\n\nexport default ProjectSingle;\n","import { useContext } from \"react\";\nimport { FiSearch } from \"react-icons/fi\";\nimport ProjectSingle from \"./ProjectSingle\";\nimport { ProjectsContext } from \"../../context/ProjectsContext\";\nimport ProjectsFilter from \"./ProjectsFilter\";\nimport {\n  Card,\n  Grid,\n  Skeleton,\n  Stack,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\n\nconst ProjectsGrid = () => {\n  const {\n    projects,\n    searchProject,\n    setSearchProject,\n    searchProjectsByTitle,\n    selectProject,\n    setSelectProject,\n    openBackdrop,\n  } = useContext(ProjectsContext);\n  const LoadingProduct = ({ show }) => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    return show ? (\n      <>\n        {Array.from(new Array(5)).map((value, index) => (\n          <Grid item>\n            <Card\n              key={index}\n              elevation={2}\n              sx={{\n                color: \"#2196f3\",\n                Width: 300,\n                Height: 300,\n                // display: 'flex',\n                // alignContent: 'space-between',\n                padding: \"5px\",\n                opacity: `${100 - Number(index * 20)}%`,\n              }}\n            >\n              <Skeleton\n                variant=\"rectangular\"\n                animation=\"wave\"\n                width={300}\n                height={200}\n              />\n              <Stack>\n                {/* <Avatar\n                    src={item.banner}\n                    sx={{\n                        alignSelf: 'center',\n                        textAlign: 'center',\n                        width: 400,\n                        // height: 128,\n                        backgroundColor: 'transparent'\n                    }}\n                    variant=\"rounded\"\n                /> */}\n                <Skeleton width=\"90%\" />\n                <Skeleton width=\"78%\" />\n              </Stack>\n            </Card>\n          </Grid>\n        ))}\n      </>\n    ) : null;\n  };\n  return (\n    <section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\n      <Grid\n        container\n        spacing={1}\n        alignItems=\"center\"\n        justify=\"center\"\n        justifyContent={\"center\"}\n      >\n        <Grid item xs={12}>\n          <div className=\"text-center\">\n            <p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\n              Projects portfolio\n            </p>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className=\"mt-10 sm:mt-16\">\n            <h3\n              className=\"font-general-regular \n                        text-center text-secondary-dark\n                        dark:text-ternary-light\n                        text-md\n                        sm:text-xl\n                        mb-3\n                        \"\n            >\n              Search projects by title\n            </h3>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className=\"mt-10 sm:mt-16\">\n            <div\n              className=\"\n                        flex\n                        justify-center\n                        border-b border-primary-light\n                        dark:border-secondary-dark\n                        pb-3\n                        gap-3\n                        \"\n            >\n              <div className=\"flex justify-between gap-2\">\n                <span\n                  className=\"\n                                hidden\n                                sm:block\n                                bg-primary-light\n                                dark:bg-ternary-dark\n                                p-2.5\n                                shadow-sm\n                                rounded-xl\n                                cursor-pointer\n                                \"\n                >\n                  <FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\n                </span>\n                <input\n                  onChange={(e) => {\n                    setSearchProject(e.target.value);\n                  }}\n                  className=\"font-general-medium \n                                pl-3\n                                pr-1\n                                sm:px-4\n                                py-2\n                                border \n                            border-gray-200\n                                dark:border-secondary-dark\n                                rounded-lg\n                                text-sm\n                                sm:text-md\n                                bg-secondary-light\n                                dark:bg-ternary-dark\n                                text-primary-dark\n                                dark:text-ternary-light\n                                \"\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"search\"\n                  required=\"\"\n                  placeholder=\"Search Projects\"\n                  aria-label=\"Name\"\n                />\n              </div>\n\n              {/* <ProjectsFilter setSelectProject={setSelectProject} /> */}\n            </div>\n          </div>\n        </Grid>\n\n        {/* <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\"> */}\n        {/* {selectProject\n          ? searchProjectsByTitle.map((project) => (\n              <ProjectSingle\n                title={project.header}\n                category={project.departments}\n                image={project.headerImage}\n                key={project.docId}\n              />\n            ))\n          : projects.map((project) => (\n              <ProjectSingle\n                title={project.header}\n                category={project.departments}\n                image={project.headerImage}\n                key={project.docId}\n              />\n            ))} */}\n        {<LoadingProduct show={openBackdrop} />}\n        {searchProjectsByTitle.map((project) => (\n          <Grid item>\n            <ProjectSingle\n              title={project.header}\n              category={project.departments}\n              image={project.headerImage}\n              key={project.docId}\n              docId={project.docId}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      {/* </div> */}\n    </section>\n  );\n};\n\nexport default ProjectsGrid;\n"],"sourceRoot":""}